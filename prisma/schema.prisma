// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  admin         Boolean?  @default(false)
  active        Boolean   @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  accounts      Account[]
  sessions      Session[]
  bookings      Booking[]
}

model Hotel {
  id            String   @id @default(cuid())
  name          String
  owner         String
  email         String   @unique
  phone         String
  location      String
  images        String[]
  rooms         Room[]   
   bookings  Booking[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Room {
  id            String   @id @default(cuid())
  hotel         Hotel    @relation(fields: [hotelId], references: [id])
  hotelId       String
  name          String
  rentPerDay    String
  type          String
  roomNumber    String
  amenities     String
  bedRooms      String
  images        String[]
   bookings  Booking[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Booking {
  id        String   @id @default(cuid())
  user     User    @relation(fields: [userId], references: [id])
  userId     String
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  hotelId   String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  checkIn   DateTime
  checkOut  DateTime
  totaldays Int
  bookingStatus   String   @default("booked")
  paymentId       String   @unique
  amount          Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}